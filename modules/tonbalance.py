# meta developer: @ghosvxmodules
# requires: requests bs4

from .. import loader, utils
from bs4 import BeautifulSoup
import requests

@loader.tds
class TonBalanceCheckMod(loader.Module):
    """–ß–µ–∫–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ TON"""
    
    strings = {
        "name": "TonBalanceCheck",
        "invalid_address": "<emoji document_id=5472267631979405211>üö´</emoji> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π TON –∞–¥—Ä–µ—Å",
        "checking": "<emoji document_id=5188217332748527444>üîç</emoji> –ü—Ä–æ–≤–µ—Ä—è—é –±–∞–ª–∞–Ω—Å –∞–¥—Ä–µ—Å–∞...",
        "balance": "<emoji document_id=5827851745396527317>üíé</emoji> –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞ <code>{}</code>:\n<b>{}</b> <b>{}</b>",
        "error": "<emoji document_id=5472125180799098428>üò≠</emoji> –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
    }

    async def tonbalcmd(self, message):
        """<–∞–¥—Ä–µ—Å>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings["invalid_address"])
            return

        await utils.answer(message, self.strings["checking"])
        
        try:
            url = f"https://tonviewer.com/{args}"
            response = requests.get(url)
            soup = BeautifulSoup(response.text, 'html.parser')
            
            balance_element = soup.find('div', {'class': 'bdtytpm b1l85tie'})
            usd_element = soup.find('div', {'class': 'bdtytpm bwoofkz'})
            
            if balance_element and usd_element:
                balance = balance_element.text.strip()
                usd = usd_element.text.strip()
                await utils.answer(
                    message,
                    self.strings["balance"].format(args, balance, usd)
                )
            else:
                await utils.answer(message, self.strings["error"])
                
        except Exception as e:
            await utils.answer(message, self.strings["error"]) 
